(function() {var implementors = {};
implementors["chalk_ir"] = [];
implementors["chalk_solve"] = [{text:"impl&lt;'q&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.DefaultTypeFolder.html\" title=\"trait chalk_ir::fold::DefaultTypeFolder\">DefaultTypeFolder</a> for <a class=\"struct\" href=\"chalk_solve/infer/canonicalize/struct.Canonicalizer.html\" title=\"struct chalk_solve::infer::canonicalize::Canonicalizer\">Canonicalizer</a>&lt;'q&gt;",synthetic:false,types:["chalk_solve::infer::canonicalize::Canonicalizer"]},{text:"impl&lt;'q&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.DefaultTypeFolder.html\" title=\"trait chalk_ir::fold::DefaultTypeFolder\">DefaultTypeFolder</a> for <a class=\"struct\" href=\"chalk_solve/infer/invert/struct.Inverter.html\" title=\"struct chalk_solve::infer::invert::Inverter\">Inverter</a>&lt;'q&gt;",synthetic:false,types:["chalk_solve::infer::invert::Inverter"]},{text:"impl&lt;'table&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.DefaultTypeFolder.html\" title=\"trait chalk_ir::fold::DefaultTypeFolder\">DefaultTypeFolder</a> for <a class=\"struct\" href=\"chalk_solve/infer/normalize_deep/struct.DeepNormalizer.html\" title=\"struct chalk_solve::infer::normalize_deep::DeepNormalizer\">DeepNormalizer</a>&lt;'table&gt;",synthetic:false,types:["chalk_solve::infer::normalize_deep::DeepNormalizer"]},{text:"impl&lt;'q&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.DefaultTypeFolder.html\" title=\"trait chalk_ir::fold::DefaultTypeFolder\">DefaultTypeFolder</a> for <a class=\"struct\" href=\"chalk_solve/infer/ucanonicalize/struct.UCollector.html\" title=\"struct chalk_solve::infer::ucanonicalize::UCollector\">UCollector</a>&lt;'q&gt;",synthetic:false,types:["chalk_solve::infer::ucanonicalize::UCollector"]},{text:"impl&lt;'q&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.DefaultTypeFolder.html\" title=\"trait chalk_ir::fold::DefaultTypeFolder\">DefaultTypeFolder</a> for <a class=\"struct\" href=\"chalk_solve/infer/ucanonicalize/struct.UMapToCanonical.html\" title=\"struct chalk_solve::infer::ucanonicalize::UMapToCanonical\">UMapToCanonical</a>&lt;'q&gt;",synthetic:false,types:["chalk_solve::infer::ucanonicalize::UMapToCanonical"]},{text:"impl&lt;'q&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.DefaultTypeFolder.html\" title=\"trait chalk_ir::fold::DefaultTypeFolder\">DefaultTypeFolder</a> for <a class=\"struct\" href=\"chalk_solve/infer/ucanonicalize/struct.UMapFromCanonical.html\" title=\"struct chalk_solve::infer::ucanonicalize::UMapFromCanonical\">UMapFromCanonical</a>&lt;'q&gt;",synthetic:false,types:["chalk_solve::infer::ucanonicalize::UMapFromCanonical"]},{text:"impl&lt;'u, 't&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.DefaultTypeFolder.html\" title=\"trait chalk_ir::fold::DefaultTypeFolder\">DefaultTypeFolder</a> for <a class=\"struct\" href=\"chalk_solve/infer/unify/struct.OccursCheck.html\" title=\"struct chalk_solve::infer::unify::OccursCheck\">OccursCheck</a>&lt;'u, 't&gt;",synthetic:false,types:["chalk_solve::infer::unify::OccursCheck"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()